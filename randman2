#!/usr/bin/php
<?php

function printCommand(){
	echo "Usage:\n";
	echo "randman -N3R1..45 -R1\n";
	echo "-N is the number of random numbers, R is the range\n";
	echo "-R optional, number of sets to generate\n";
}

function arraySwap(&$a,$from,$to){
	$e1=$a[$from];
	$e2=$a[$to];
	$a[$from]=$e2;
	$a[$to]=$e1;
}

function jiggleBalls(&$balls){
	$timeSeconds=mt_rand(7,13)*1000000000;
	$timeMSeconds=mt_rand(1,999)*1000000;
	$timeNSeconds=mt_rand(1,999);
	$timeToTake=$timeSeconds+$timeMSeconds+$timeNSeconds;
	$start=hrtime(true);
	$endTime=$start+$timeToTake;
	$size=count($balls);
	$jiggles=0;
	$currentTime=0;

	for($i=0;$i<mt_rand(30,23223);$i++){
		for($j=0;$j<$size;$j++){
			arraySwap($balls,$j,mt_rand(0,$size-1));
		}
	}

	do{
		$s1=mt_rand(0,$size-1);
		$s2=mt_rand(0,$size-1);
		arraySwap($balls,$s1,$s2);
		$jiggles++;
		$currentTime=hrtime(true);
	}while($currentTime<$endTime);
	echo "Current balls: ".implode(',',$balls)."\n";
	echo "Jiggles $jiggles in ".(($currentTime-$start)/1000000000)."s\n";
}

function getRandomNumberOrg($min, $max){
	$jsonrpc=[
		"jsonrpc"=>"2.0",
		"method"=>"generateIntegers",
		"params"=>[
			"apiKey"=>"cd28a225-8f0c-49a2-9827-b65c4323daa9",
			"n"=>1,
			"min"=>$min,
			"max"=>$max,
			"replacement"=>true
		],
		"id"=>7772
	];
	echo "spamming Random.org...\n";
	$ch=curl_init("https://api.random.org/json-rpc/2/invoke");
	$payload=json_encode($jsonrpc);
	curl_setopt($ch,CURLOPT_POSTFIELDS,$payload);
	curl_setopt($ch,CURLOPT_HTTPHEADER,array('Content-Type:application/json'));
	curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
	$result=curl_exec($ch);
	if($result===false){
		echo "Error getting from Random.org\n";
		exit;
	}
	curl_close($ch);
	$result=json_decode($result,true);
	$n=$result['result']['random']['data'][0];
	return $n;
}

function generateRow($sequences){
	$numbers=[];
	foreach($sequences as $v){
		$seq=[];
		$rands=[];
		for($j=$v['RangeFrom'];$j<($v['RangeTo']+1);$j++){
			$seq[]=$j;
		}
		for($j=0;$j<$v['Amount'];$j++){
			jiggleBalls($seq);
			$n=getRandomNumberOrg(0,count($seq)-1);
			$rands[]=$seq[$n];
			echo "We have ball {$seq[$n]}!\n";
			array_splice($seq,$n,1);
		}
			$numbers[]=$rands;
	}
	$out=[];
	foreach($numbers as $v){
		$out[]=implode(',',$v);
	}
	echo "\n\nThis is your lucky numbers:\n";
	echo implode('|',$out)."\n";
}

if($argc<2){
	printCommand();exit;
}
$args=array_slice($argv,1);

$sequences=[];
$rows=1;

foreach($args as $v){
	if(preg_match('/^-N([1-9][0-9]{0,10})(U?)R([0-9]{1,11})\.\.([1-9][0-9]{0,10})$/',
		$v,$matches)){
		$matches[1]=(int)$matches[1];
		$matches[2]=($matches[2]=='U')?true:false;
		$matches[3]=(int)$matches[3];
		$matches[4]=(int)$matches[4];
		$sequences[]=['Amount'=>$matches[1],'Unique'=>$matches[2],
			'RangeFrom'=>$matches[3],'RangeTo'=>$matches[4]];
	}
	else if(preg_match('/^-R([1-9][0-9]{0,10})$/',$v,$matches)){
		$rows=$matches[1];
	}
}

if(count($sequences)<1){
	printCommand();exit;
}

for($i=0;$i<$rows;$i++){
	generateRow($sequences);
}
